{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChanges","type","onChange","App","PI","handleChange","e","setState","searchField","target","value","state","console","log","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,G,kBAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAY,iBAAjB,UACA,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,WAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCLTC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLtBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,cAAf,OAChB,uBAAOC,KAAO,SACPb,UAAY,SACZW,YAAeA,EACfG,SAAaF,MCmCdG,E,kDArCb,aAAc,IAAD,8BACZ,gBAQHC,GAAK,KATU,EAiBfC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAhBrC,EAAKC,MAAO,CACXf,SAAW,GACXY,YAAa,IAEbI,QAAQC,IAAI,EAAKF,MAAMf,UANZ,E,gEAWM,IAAD,OAChBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAI,OAAI,EAAKX,SAAS,CAACX,SAAWsB,S,+BAMlC,IAAD,EAEyBC,KAAKR,MAA9Bf,EAFA,EAEAA,SAAUY,EAFV,EAEUA,YACZY,EAAmBxB,EAASyB,QAAO,SAAA/B,GAAO,OAC7CA,EAAQG,KAAK6B,cAAcC,SAASf,EAAYc,kBAGnD,OAAQ,sBAAKlC,UAAU,MAAf,UACR,gDACA,cAAC,EAAD,CAAWW,YAAc,qBAAqBC,cAAiBmB,KAAKd,eAEpE,cAAC,EAAD,CAAUT,SAAYwB,EAAtB,sB,GAhCiBI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7cd8305.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => \r\n(\r\n    <div className = \"card-container\">\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"No-Pic\"/>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\nexport const Cardlist = (props) =>{\r\n    return(\r\n        <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => ( \r\n                <Card key={monster.id} monster={monster}></Card>))\r\n        }\r\n        </div>\r\n        )\r\n}; ","import React from 'react';\r\nimport './search-box.component.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChanges}) =>(\r\n         <input type = \"search\" \r\n                className = \"search\"\r\n                placeholder = {placeholder} \r\n                onChange = { handleChanges }/>\r\n);","import React, {Component} from 'react';\nimport './App.css';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nclass App extends Component{\n  constructor(){\n   super();\n   this.state= {\n    monsters : [],\n    searchField :''\n   }\n    console.log(this.state.monsters)\n  }\n\nPI = 3.14; \n  \n componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response =>response.json())\n    .then(user => this.setState({monsters : user}));\n }\n\nhandleChange = (e) => {\n  this.setState({searchField : e.target.value})\n}\n render(){\n \n  const {monsters, searchField} = this.state; \n   var filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n   \n return( <div className=\"App\">\n <h1> Monster Rolex</h1>\n <SearchBox placeholder = \"Search for Monster\" handleChanges = {this.handleChange}></SearchBox>\n\n <Cardlist monsters = {filteredMonsters}> </Cardlist>\n</div>);\n }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}